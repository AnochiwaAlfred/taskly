# Generated by Django 5.2.6 on 2025-09-04 05:23

import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Firstname')),
                ('last_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Lastname')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_online', models.BooleanField(default=False, editable=False)),
                ('created', models.DateTimeField(auto_now=True)),
                ('last_online', models.DateTimeField(auto_now=True)),
                ('token', models.CharField(blank=True, editable=False, max_length=600, null=True)),
                ('key', models.CharField(blank=True, editable=False, max_length=150, null=True)),
                ('otp', models.CharField(blank=True, editable=False, max_length=6, null=True)),
                ('is_verified', models.BooleanField(default=False, editable=False)),
                ('permissions', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'AuthUser',
                'verbose_name_plural': 'AuthUsers',
            },
            managers=[
                ('objects', users.models.AuthUserManager()),
            ],
        ),
    ]
